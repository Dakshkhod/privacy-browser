version: '3.8'

services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile.prod
    container_name: privacy-browser-backend-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY_HASH_SALT=${API_KEY_HASH_SALT}
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8000
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost,https://yourdomain.com}
      - DEBUG_MODE=false
      - LOG_LEVEL=INFO
    volumes:
      - backend-logs:/app/logs
      - backend-data:/app/data
      - backend-temp:/app/temp
    networks:
      - privacy-browser-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: privacy-browser-frontend-prod
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - privacy-browser-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  nginx-proxy:
    image: nginx:alpine
    container_name: privacy-browser-nginx-prod
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - privacy-browser-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  redis:
    image: redis:7-alpine
    container_name: privacy-browser-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}
    volumes:
      - redis-data:/data
    networks:
      - privacy-browser-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  privacy-browser-network:
    driver: bridge

volumes:
  backend-logs:
  backend-data:
  backend-temp:
  nginx-logs:
  redis-data:
