version: '3.8'

services:
  backend:
    build: ./Backend
    container_name: privacy-browser-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - API_KEY_HASH_SALT=${API_KEY_HASH_SALT}
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8000
      - ALLOWED_ORIGINS=http://localhost,http://localhost:3000,https://yourdomain.com
      - DEBUG_MODE=false
    volumes:
      - ./Backend/logs:/app/logs
      - ./Backend/data:/app/data
      - ./Backend/temp:/app/temp
    networks:
      - privacy-browser-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: ./Frontend
    container_name: privacy-browser-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - privacy-browser-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx-proxy:
    image: nginx:alpine
    container_name: privacy-browser-nginx
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - privacy-browser-network

networks:
  privacy-browser-network:
    driver: bridge

volumes:
  backend-logs:
  backend-data:
  backend-temp:
